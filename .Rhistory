theme(legend.title = element_blank()) +
geom_point(aes(x = lifeExp, y = gdpPercap, color = continent), data = dat)
rndmfrst <- randomForest(continent ~ lifeExp + gdpPercap, data = dat)
new$pred_rndmfrst <- predict(rndmfrst, newdata = new, type = "class")
new %>%
ggplot(aes(x = lifeExp, y = gdpPercap, color = pred_rndmfrst)) +
theme_bw() +
geom_point(alpha = 0.25, size = 0.5) +
scale_y_continuous(labels = dollar_format(prefix = "$")) +
labs(x = "Life expectancy (year)", y = "GDP per capita") +
theme(legend.title = element_blank()) +
geom_point(aes(x = lifeExp, y = gdpPercap, color = continent), data = dat)
partition <- function(model) {
lifeExp <- seq(min(dat$lifeExp), max(dat$lifeExp), length=200)
gdpPercap <- seq(min(dat$gdpPercap), max(dat$gdpPercap), length=200)
new <- expand.grid(lifeExp, gdpPercap)
names(new) <- c('lifeExp', 'gdpPercap')
tryCatch({
new$pred <- predict(model, newdata = new, type = "class")
},
error = function(e) {
new$pred <<- predict(model, newdata = new)$class
})
dat <- gapminder %>% filter(year == 2007)
new %>%
ggplot(aes(x = lifeExp, y = gdpPercap, color = pred)) +
theme_bw() +
geom_point(alpha = 0.25, size = 0.5) +
scale_y_continuous(labels = dollar_format(prefix = "$")) +
labs(x = "Life expectancy (year)", y = "GDP per capita") +
theme(legend.title = element_blank()) +
geom_point(aes(x = lifeExp, y = gdpPercap, color = continent), data = dat)
}
partition(rndmfrst)
partition <- function(model) {
lifeExp <- seq(min(dat$lifeExp), max(dat$lifeExp), length=200)
gdpPercap <- seq(min(dat$gdpPercap), max(dat$gdpPercap), length=200)
new <- expand.grid(lifeExp, gdpPercap)
names(new) <- c('lifeExp', 'gdpPercap')
tryCatch({
new$pred <- predict(model, newdata = new, type = "class")
},
error = function(e) {
new$pred <<- predict(model, newdata = new)$class
})
dat <- gapminder %>% filter(year == 2007)
new %>%
ggplot(aes(x = lifeExp, y = gdpPercap, color = pred)) +
theme_bw() +
geom_point(alpha = 0.25, size = 0.5) +
scale_y_continuous(labels = dollar_format(prefix = "$")) +
labs(x = "Life expectancy (year)", y = "GDP per capita") +
theme(legend.title = element_blank()) +
geom_point(aes(x = lifeExp, y = gdpPercap, color = continent), data = dat)
}
partition(LDA)
partition(rndmfrst)
library(rpart)
tree <- rpart(continent ~ lifeExp + gdpPercap, data = dat, method = "class")
partition(tree)
tree <- rpart(continent ~ lifeExp + gdpPercap, data = dat)
partition(tree)
x <- c("Orange")
library(stringr)
str_length(x)
str_length(c(x)
str_length(c(x))
str_length(c(x))
?str_c
str_c("Letter: ", letters)
str_c("Letter", letters, sep = ": ")
str_c(letters, " is for", "...")
str_c(letters[-26], " comes before ", letters[-1])
str_c(letters, collapse = "")
str_c(letters, collapse = ", ")
str_c("Mango","Orange","Banana", sep = " ")
str_c("Mango", c("Orange", "Banana"), sep = " ")
str_c("Mango", c("Orange", "Banana"), c("Orange", "Banana"), sep = " ")
str_c(c("Orange", "Banana"), c("Orange", "Banana"), sep = " ")
str_c(c("Orange", "Banana"), c("Orange", "Banana"), c("Orange", "Banana", "a"), sep = " ")
str_c(c("Orange", "Banana"), c("Orange", "Banana"), c("Orange", "Banana"), sep = " ")
str_c(letters, letters, collapse = "")
str_c(letters, letters, collapse = ", ")
str_c(letters, letters, sep = "")
library(gapminder)
library(tidyverse)
dat <- gapminder %>%
filter(country == "Zimbabwe")
qlm <- lm(lifeExp ~ year + year^2, gapminder)
qlm <- lm(lifeExp ~ year + year^2, dat)
summary(qlm)
attach(dat)
qlm <- lm(lifeExp ~ year + year^2)
summary(qlm)
qlm <- lm(lifeExp ~ year + year2)
qlm <- lm(lifeExp ~ year + year2)
summary(qlm)
year2 <- year2
qlm <- lm(lifeExp ~ year + year2)
year2 <- year^2
qlm <- lm(lifeExp ~ year + year2)
summary(qlm)
qlm <- lm(lifeExp ~ year + I(year^2))
summary(qlm)
qlm <- lm(lifeExp ~ year + I(year^2), dat)
summary(qlm)
j_fit <- lm(lifeExp ~ I(year-1952) + I(year2-1952^2), dat)
summary(j_fit)
j_fit <- lm(lifeExp ~ I(year-1952) + I((year-1952)^2), dat)
summary(j_fit)
dat
dat %>%
mutate(year = year - 1952)
dat %>%
mutate(year = year - 1952) %>%
lm(lifeExp ~ year + I(year^2)) %>%
summary()
dat %>%
mutate(year = year - 1952) %>%
lm(data = ., lifeExp ~ year + I(year^2)) %>%
summary()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gapminder)
library(ggmap)
library(gganimate)
gapminder %>%
filter(year == 2007) %>%
left_join(., country_geo, by = "country") %>%
mutate(density = pop / area) %>%
ggplot(aes(x = longitude, y = latitude, size = pop, color = lifeExp)) +
theme_bw() +
borders("world", colour = "gray80", fill = "gray75") +
geom_point() +
scale_size_area() +
scale_size_continuous(name = "Pop. density") +
scale_color_continuous(name = "Life exp.") +
labs(title = "Population density and life expectancy in 2007") +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = longitude, y = latitude, size = pop, color = lifeExp)) +
theme_bw() +
borders("world", colour = "gray80", fill = "gray75") +
geom_point() +
scale_size_area() +
scale_size_continuous(name = "Pop. density") +
scale_color_continuous(name = "Life exp.") +
labs(title = "Population density and life expectancy in 2007") +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()) +
transition_time(year) +
ease_aes('linear')
gapminder %>%
left_join(., country_geo, by = "country")
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = latitude, y = lifeExp, color = continent)) %>%
geom_point() +
facet_wrap(~year)
gapminder %>%
left_join(., country_geo, by = "country") +
ggplot(aes(x = latitude, y = lifeExp, color = continent)) +
geom_point() +
facet_wrap(~year)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = latitude, y = lifeExp, color = continent)) +
geom_point() +
facet_wrap(~year)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = latitude, y = gdpPercap, color = continent)) +
geom_point() +
facet_wrap(~year)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = abs(latitude), y = lifeExp, color = continent)) +
geom_point() +
facet_wrap(~year)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = abs(latitude), y = lifeExp, color = continent)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~year)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = abs(latitude), y = lifeExp, color = continent, group = year)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~year)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = abs(longitude), y = lifeExp, color = continent, group = year)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~year)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = abs(latitude), y = lifeExp, color = continent, group = year)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~year)
library(MASS)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = abs(latitude), y = lifeExp, color = continent, group = year)) +
geom_point() +
geom_smooth(method = rlm) +
facet_wrap(~year)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = abs(latitude), y = gdpPercap, color = continent, group = year)) +
geom_point() +
geom_smooth(method = rlm) +
facet_wrap(~year)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = abs(latitude), y = log(gdpPercap), color = continent, group = year)) +
geom_point() +
geom_smooth(method = rlm) +
facet_wrap(~year)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = abs(latitude), y = log(gdpPercap), group = year)) +
geom_point(aes(color = continent)) +
geom_smooth(method = rlm) +
facet_wrap(~year)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = abs(latitude), y = log(gdpPercap))) +
geom_point(aes(color = continent)) +
geom_smooth(method = rlm, aes(group = year)) +
facet_wrap(~year)
library(MASS)
gapminder %>%
left_join(., country_geo, by = "country") %>%
ggplot(aes(x = abs(latitude), y = log(gdpPercap))) +
theme_bw() +
geom_point(aes(color = continent)) +
geom_smooth(method = rlm, se = FALSE) +
labs(title = 'Year: {frame_time}', x = 'Latitude', y = 'gdpPercap') +
transition_time(year) +
ease_aes('linear')
gapminder %>%
left_join(., country_geo, by = "country") %>%
mutate(gdp = gdpPercap * pop,
gdpPerSqKm = gdp/area)
gapminder %>%
left_join(., country_geo, by = "country") %>%
mutate(gdp = gdpPercap * pop,
gdpPerSqKm = gdp/area) %>%
group_by(year) %>%
top_n(5, gdpPerSqKm) %>%
ungroup() %>%
arrange(year, gdpPerSqKm) %>%
mutate(order = row_number())
gapminder %>%
left_join(., country_geo, by = "country") %>%
mutate(gdp = gdpPercap * pop,
gdpPerSqKm = gdp/area) %>%
group_by(year) %>%
top_n(5, gdpPerSqKm) %>%
ungroup() %>%
arrange(year, gdpPerSqKm) %>%
mutate(order = row_number()) %>%
ggplot(aes(x = order, y = gdpPerSqKm, group = year, fill = country)) +
theme_bw() +
geom_bar(stat = 'identity') +
geom_text(aes(label = country, y = 1), hjust = 0, size = 3) +  # Add texts on the bars
facet_wrap(~ year, scales = 'free_y') +
labs(x = 'Country', y = 'Life expectancy') +
theme(axis.text.y = element_blank(),  # Remove the text and ticks of the y axis
axis.ticks.y = element_blank(),
legend.position = 'none') +
coord_flip()  # Switch the x and y axises
gapminder %>%
left_join(., country_geo, by = "country") %>%
mutate(gdp = gdpPercap * pop,
gdpPerSqKm = gdp/area) %>%
group_by(year) %>%
top_n(5, gdpPerSqKm) %>%
ungroup() %>%
arrange(year, gdpPerSqKm) %>%
mutate(order = row_number()) %>%
ggplot(aes(x = order, y = log(gdpPerSqKm), group = year, fill = country)) +
theme_bw() +
geom_bar(stat = 'identity') +
geom_text(aes(label = country, y = 1), hjust = 0, size = 3) +  # Add texts on the bars
facet_wrap(~ year, scales = 'free_y') +
labs(x = 'Country', y = 'Life expectancy') +
theme(axis.text.y = element_blank(),  # Remove the text and ticks of the y axis
axis.ticks.y = element_blank(),
legend.position = 'none') +
coord_flip()  # Switch the x and y axises
gapminder %>%
left_join(., country_geo, by = "country") %>%
mutate(gdp = gdpPercap * pop,
gdpPerSqKm = gdp/area) %>%
group_by(year) %>%
top_n(5, gdpPerSqKm) %>%
ungroup() %>%
arrange(year, gdpPerSqKm) %>%
mutate(order = row_number()) %>%
ggplot(aes(x = order, y = gdpPerSqKm, group = year, fill = country)) +
theme_bw() +
scale_y_log10() +
geom_bar(stat = 'identity') +
geom_text(aes(label = country, y = 1), hjust = 0, size = 3) +  # Add texts on the bars
facet_wrap(~ year, scales = 'free_y') +
labs(x = 'Country', y = 'Life expectancy') +
theme(axis.text.y = element_blank(),  # Remove the text and ticks of the y axis
axis.ticks.y = element_blank(),
legend.position = 'none') +
coord_flip()  # Switch the x and y axises
gapminder %>%
left_join(., country_geo, by = "country") %>%
mutate(gdp = gdpPercap * pop,
gdpPerSqKm = gdp/area)
gapminder %>%
left_join(., country_geo, by = "country") %>%
dplyr::select(continent == "Europe") %>%
mutate(gdp = gdpPercap * pop,
gdpPerSqKm = gdp/area) %>%
group_by(year) %>%
top_n(5, gdpPerSqKm) %>%
ungroup() %>%
arrange(year, gdpPerSqKm) %>%
mutate(order = row_number()) %>%
ggplot(aes(x = order, y = gdpPerSqKm, group = year, fill = country)) +
theme_bw() +
scale_y_log10() +
geom_bar(stat = 'identity') +
geom_text(aes(label = country, y = 1), hjust = 0, size = 3) +  # Add texts on the bars
facet_wrap(~ year, scales = 'free_y') +
labs(x = 'Country', y = 'Life expectancy') +
theme(axis.text.y = element_blank(),  # Remove the text and ticks of the y axis
axis.ticks.y = element_blank(),
legend.position = 'none') +
coord_flip()  # Switch the x and y axises
gapminder %>%
left_join(., country_geo, by = "country") %>%
filter(continent == "Europe") %>%
mutate(gdp = gdpPercap * pop,
gdpPerSqKm = gdp/area) %>%
group_by(year) %>%
top_n(5, gdpPerSqKm) %>%
ungroup() %>%
arrange(year, gdpPerSqKm) %>%
mutate(order = row_number()) %>%
ggplot(aes(x = order, y = gdpPerSqKm, group = year, fill = country)) +
theme_bw() +
scale_y_log10() +
geom_bar(stat = 'identity') +
geom_text(aes(label = country, y = 1), hjust = 0, size = 3) +  # Add texts on the bars
facet_wrap(~ year, scales = 'free_y') +
labs(x = 'Country', y = 'Life expectancy') +
theme(axis.text.y = element_blank(),  # Remove the text and ticks of the y axis
axis.ticks.y = element_blank(),
legend.position = 'none') +
coord_flip()  # Switch the x and y axises
gapminder %>%
left_join(., country_geo, by = "country") %>%
filter(continent == "Americas") %>%
mutate(gdp = gdpPercap * pop,
gdpPerSqKm = gdp/area) %>%
group_by(year) %>%
top_n(5, gdpPerSqKm) %>%
ungroup() %>%
arrange(year, gdpPerSqKm) %>%
mutate(order = row_number()) %>%
ggplot(aes(x = order, y = gdpPerSqKm, group = year, fill = country)) +
theme_bw() +
scale_y_log10() +
geom_bar(stat = 'identity') +
geom_text(aes(label = country, y = 1), hjust = 0, size = 3) +  # Add texts on the bars
facet_wrap(~ year, scales = 'free_y') +
labs(x = 'Country', y = 'Life expectancy') +
theme(axis.text.y = element_blank(),  # Remove the text and ticks of the y axis
axis.ticks.y = element_blank(),
legend.position = 'none') +
coord_flip()  # Switch the x and y axises
gapminder %>%
left_join(., country_geo, by = "country") %>%
filter(continent == "Asia") %>%
mutate(gdp = gdpPercap * pop,
gdpPerSqKm = gdp/area) %>%
group_by(year) %>%
top_n(5, gdpPerSqKm) %>%
ungroup() %>%
arrange(year, gdpPerSqKm) %>%
mutate(order = row_number()) %>%
ggplot(aes(x = order, y = gdpPerSqKm, group = year, fill = country)) +
theme_bw() +
scale_y_log10() +
geom_bar(stat = 'identity') +
geom_text(aes(label = country, y = 1), hjust = 0, size = 3) +  # Add texts on the bars
facet_wrap(~ year, scales = 'free_y') +
labs(x = 'Country', y = 'Life expectancy') +
theme(axis.text.y = element_blank(),  # Remove the text and ticks of the y axis
axis.ticks.y = element_blank(),
legend.position = 'none') +
coord_flip()  # Switch the x and y axises
gapminder %>%
left_join(., country_geo, by = "country") %>%
#filter(continent == "Asia") %>%
mutate(gdp = gdpPercap * pop,
gdpPerSqKm = gdp/area) %>%
group_by(year) %>%
top_n(5, gdpPerSqKm) %>%
ungroup() %>%
arrange(year, gdpPerSqKm) %>%
mutate(order = row_number()) %>%
ggplot(aes(x = order, y = gdpPerSqKm, group = year, fill = country)) +
theme_bw() +
scale_y_log10() +
geom_bar(stat = 'identity') +
geom_text(aes(label = country, y = 1), hjust = 0, size = 3) +  # Add texts on the bars
facet_wrap(~ year, scales = 'free_y') +
labs(x = 'Country', y = 'Life expectancy') +
theme(axis.text.y = element_blank(),  # Remove the text and ticks of the y axis
axis.ticks.y = element_blank(),
legend.position = 'none') +
coord_flip()  # Switch the x and y axises
library(gapminder)
gapminder %>%
filter(country == "Zimbabwe") %>%
lm(lifeExp ~ I(year - 1952) + I(year^2 - 1952^2)) %>%
summary()
library(tidyverse)
gapminder %>%
filter(country == "Zimbabwe") %>%
lm(lifeExp ~ I(year - 1952) + I(year^2 - 1952^2)) %>%
summary()
gapminder %>%
filter(country == "Zimbabwe") %>%
lm(data = ., lifeExp ~ I(year - 1952) + I(year^2 - 1952^2)) %>%
summary()
gapminder %>%
filter(country == "Zimbabwe") %>%
lm(data = ., lifeExp ~ I(year - 1952) + I((year - 1952)^2)) %>%
summary()
lm(data = ., lifeExp ~ I(year) + I(year^2)) %>%
summary()
gapminder %>%
filter(country == "Zimbabwe") %>%
mutate(year = year - 1952) %>%
lm(data = ., lifeExp ~ I(year) + I(year^2)) %>%
summary()
remove.packages("randomForest")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install_version("randomForest", version = "4.6-12")
library(randomForest)
install_version("randomForest", version = "4.6-12")
uninstall(randomForest)
install_version("randomForest", version = "4.6-12")
setwd("~/Documents/STAT545/hw08-YuHsiangLo")
shiny::runApp()
bcl <- read.csv("data/bcl-data.csv", header = TRUE, sep = ",")
View(bcl)
bcl %>%
ggplot(aes(x = Alcohol_Content, y = Price, color = Type)) +
geom_point()
bcl %>%
filter(Price < 100) %>%
ggplot(aes(x = Alcohol_Content, y = Price, color = Type)) +
geom_point()
sample(5)
sample(x = 1:10, 5)
runApp('~/Documents/STAT545/STAT545_participation/20181113/bcl')
runApp()
summary(bcl)
runApp()
runApp()
runApp()
unique(bcl$Country)
c("ALL", unique(bcl$Country))
c("ALL", unique(as.character(bcl$Country)))
sort(c("ALL", unique(as.character(bcl$Country))))
runApp()
install.packages("DT")
library(DT)
runApp()
library(stringr)
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='rogerylo',
token='DE9F7F50EBB3126F50474F19797420ED',
secret='2FAl/5SjuKDYOIr56T6gowMEjPFWxzgI2bkzFtAJ')
library(rsconnect)
runApp('hw08.R')
rsconnect::deployApp('hw08')
rsconnect::deployApp('hw08.R')
runApp('hw08.R')
runApp('hw08.R')
runApp('hw08.R')
runApp('hw08.R')
rsconnect::setAccountInfo(name='rogerylo',
token='DE9F7F50EBB3126F50474F19797420ED',
secret='2FAl/5SjuKDYOIr56T6gowMEjPFWxzgI2bkzFtAJ')
runApp('hw08.R')
library(rsconnect)
rsconnect::setAccountInfo(name='rogerylo',
token='DE9F7F50EBB3126F50474F19797420ED',
secret='2FAl/5SjuKDYOIr56T6gowMEjPFWxzgI2bkzFtAJ')
runApp('hw08.R')
